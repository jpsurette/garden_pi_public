services:
  soil-sensorhost:
    container_name: soil-sensorhost
    build: ./
    #image: soil-sensorhost:latest
    networks:
      - default
    restart: unless-stopped
    environment:
      - TZ=${TZ:-Etc/UTC}
    env_file:
      - .env
    volumes:
      - ./save_sensor_data.py:/usr/app/src/save_sensor_data.py
      - ./.env:/usr/app/src/.env
    command: sh -c "sleep 10s ; python3 ./save_sensor_data.py"
    depends_on:
      - kafka
      - influxdb

  influxdb:
    container_name: influxdb
    image: influxdb:2.7
    restart: unless-stopped
    networks:
      - default
    ports:
      - target: 8086
        published: 8086
        protocol: tcp
        mode: host
    environment:
    - TZ="America/New_York"
    - DOCKER_INFLUXDB_INIT_MODE=setup
    - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER}
    - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
    - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
    - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
    - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    env_file:
      - .env
    volumes:
    - influx_data_volume:/var/lib/influxdb2
    - influx_backup_volume:/var/lib/backup
    - influx_config_volume:/etc/influxdb2
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8086"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    networks:
      - default
    ports:
      - '9092:9092'
      - '9094:9094'
    restart: unless-stopped
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093, EXTERNAL://0.0.0.0:9094 #EXTERNAL://:9094,
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092 , EXTERNAL://sensorhost:9094 #, EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    env_file:
      - .env
    links:
      - influxdb
    ports:
      - '3000:3000'
    volumes:
      - grafana_volume:/var/lib/grafana

volumes:
  influx_data_volume:
    driver: local
    driver_opts:
       o: bind
       type: none
       device: /home/pi/iot_data/influxdb/data
  influx_backup_volume:
    driver: local
    driver_opts:
       o: bind
       type: none
       device: /home/pi/iot_data/influxdb/backup
  influx_config_volume:
    driver: local
    driver_opts:
       o: bind
       type: none
       device: /home/pi/iot_data/influxdb/config
  grafana_volume:
    driver: local
    driver_opts:
       o: bind
       type: none
       device: /home/pi/iot_data/grafana