services:
  soil-sensorhost:
    container_name: soil-sensorhost
    image: soil-sensorhost:latest
    networks:
      - default
    restart: unless-stopped
    environment:
      - TZ=${TZ:-Etc/UTC}
    env_file:
      - .env
    volumes:
      - ./save_sensor_data.py:/usr/app/src/save_sensor_data.py
      - ./.env:/usr/app/src/.env
    command: sh -c "sleep 10s ; python3 ./save_sensor_data.py"
    depends_on:
      - moquitto
      - influxdb
  influxdb:
    container_name: influxdb
    image: influxdb:2.7
    restart: unless-stopped
    networks:
      - default
    ports:
      - target: 8086
        published: 8086
        protocol: tcp
        mode: host
    environment:
    - TZ="America/New_York"
    - DOCKER_INFLUXDB_INIT_MODE=setup
    - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER}
    - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
    - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
    - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
    - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    volumes:
    - /home/pi/iot_data/influxdb/data:/var/lib/influxdb
    - /home/pi/iot_data/influxdb/backup:/var/lib/influxdb/backup
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8086"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:latest
    networks:
      - default
    build:
      context: .
    restart: unless-stopped
    environment:
    - TZ=${TZ:-Etc/UTC}
    ports:
      - target: 1883
        published: 1883
        protocol: tcp
        mode: host
      - target: 9001
        protocol: tcp
        mode: host
    volumes:
    - ./config:/mosquitto/config
    - /home/pi/iot_data/mosquitto/log:/mosquitto/log/
    - /home/pi/iot_data/mosquitto/data:/mosquitto/data/
  portainer-ce:
    container_name: portainer-ce
    image: portainer/portainer-ce
    restart: unless-stopped
    ports:
    - 8000:8000
    - 9000:9000
    # HTTPS
    - 9443:9443
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /home/pi/iot_data/portainer/data:/data